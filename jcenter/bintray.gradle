apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        archiveClassifier.set 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    apply plugin: "org.jetbrains.dokka"
    task dokkaJavadoc(type: dokka.getClass()) {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        archiveClassifier.set 'javadoc'
        from "$buildDir/javadoc"
    }
} else {
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set 'sources'
        from sourceSets.main.allSource
    }

    apply plugin: "org.jetbrains.dokka"
    task dokkaJavadoc(type: dokka.getClass()) {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        archiveClassifier.set 'javadoc'
        from "$buildDir/javadoc"
    }
}

bintrayUpload.dependsOn assemble
bintrayUpload.dependsOn sourcesJar
bintrayUpload.dependsOn javadocJar

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('local.properties').newInputStream())
} catch (Exception ignored) {
    // let's skip bintray task on CI
}

bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription

        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        userOrg = 'mailru'
        version {
            desc = libraryDescription
//      gpg {
//        sign = true //Determines whether to GPG sign the files. The default is false
//        passphrase = properties.getProperty("bintray.gpg.password")
            //Optional. The passphrase for GPG signing'
//      }
        }
    }
}